from PyQt5.QtWidgets import QApplication, QWidget, QLabel, QLineEdit, QHBoxLayout, QVBoxLayout, QPushButton
from PyQt5.QtCore import *
from instr import *

#инициализация глобальных переменных
name = ''
age = 7
p1, p2, p3 = 0, 0, 0

win_x, win_y = 200, 100
win_w, win_h = 1000, 600

txt_title = 'Тест Руфье'

#1 экран
class InstrScr(QWidget):
    def __init__(self):
        super().__init__()

        self.initUi()
        self.connects()
        self.set_appear()
        self.show()

    def initUi(self):
        #создание кнопок
        self.lbl_instr = QLabel(txt_instruction)
        self.lbl_name = QLabel('введите имя:')
        self.inp_name = QLineEdit()
        self.lbl_age = QLabel('введите возраст:')
        self.inp_age = QLineEdit('7')
        self.btn = QPushButton('начать')



        #layout
        self.v_line = QVBoxLayout()
        self.h_line_name = QHBoxLayout()
        self.h_line_age = QHBoxLayout()
        #размещение виджетов по линиям
        self.h_line_name.addWidget(self.lbl_name)
        self.h_line_name.addWidget(self.inp_name)

        self.h_line_age.addWidget(self.lbl_age)
        self.h_line_age.addWidget(self.inp_age)        

        self.v_line.addWidget(self.lbl_instr)
        self.v_line.addLayout(self.h_line_name)
        self.v_line.addLayout(self.h_line_age)
        self.v_line.addWidget(self.btn, alignment = Qt.AlignCenter)

        self.setLayout(self.v_line)






    def connects(self):
        self.btn.clicked.connect(self.next_click)


    def next_click(self):
        self.ps = BefPulsScr()
        self.hide()
    
    def set_appear(self):
        self.setWindowTitle(txt_title)
        self.resize(win_w, win_h)
        self.move(win_x, win_y)


#2 экран
class BefPulsScr(QWidget):
    def __init__(self):
        super().__init__()

        self.initUi()
        self.connects()
        self.set_appear()
        self.show()
    
    def set_appear(self):
        self.setWindowTitle(txt_title)
        self.resize(win_w, win_h)
        self.move(win_x, win_y)

    def initUi(self):
        self.init = QLabel(txt_starttest1)
        self.text_p1 = QLabel('Введите результат:')
        self.line_p1 = QLineEdit('0')
        self.btn_next = QPushButton(txt_next, self)
        
        self.h1_line = QHBoxLayout()
        self.h1_line.addWidget(self.text_p1)
        self.h1_line.addWidget(self.line_p1)
        self.v1_line = QVBoxLayout()
        self.v1_line.addWidget(self.init, alignment = Qt.AlignCenter)
        self.v1_line.addLayout(self.h1_line)
        self.v1_line.addWidget(self.btn_next, alignment = Qt.AlignCenter)
        self.setLayout(self.v1_line)
    
    def connects(self):
        self.btn_next.clicked.connect(self.next_click)
    
    def next_click(self):
        self.tw = CheckSitsScr()
        self.hide()
  

    
#3 экран
class CheckSitsScr(QWidget):
    def __init__(self):
        super().__init__()

        self.initUi()
        self.connects()
        self.set_appear()
        self.show()
    
    def set_appear(self):
        self.setWindowTitle(txt_title)
        self.resize(win_w, win_h)
        self.move(win_x, win_y)

    def initUi(self):
        self.instr = QLabel(txt_starttest2)
        self.btn_next = QPushButton('Продолжить', self)
        

        self.lay_line = QVBoxLayout()
        self.lay_line.addWidget(self.instr, alignment = Qt.AlignCenter)
        self.lay_line.addWidget(self.btn_next, alignment = Qt.AlignCenter)
        self.setLayout(self.lay_line)
    
    def connects(self):
        self.btn_next.clicked.connect(self.next_click)
    
    def next_click(self):
        self.tw = AftPulsScr()
        self.hide()


#4 экран
class AftPulsScr(QWidget):
    def __init__(self):
        super().__init__()

        self.initUi()
        self.connects()
        self.set_appear()
        self.show()
    
    def set_appear(self):
        self.setWindowTitle(txt_title)
        self.resize(win_w, win_h)
        self.move(win_x, win_y)

    def initUi(self):
        #создание кнопок
        self.lbl_instr = QLabel(txt_test3)
        self.lbl_p2 = QLabel('введите результат:')
        self.inp_p2 = QLineEdit('0')
        self.lbl_p3 = QLabel('введите результат после отдыха:')
        self.inp_p3 = QLineEdit('0')
        self.btn = QPushButton('Завершить')



        #layout
        self.v_line = QVBoxLayout()
        self.h_line_p1 = QHBoxLayout()
        self.h_line_p2 = QHBoxLayout()
        #размещение виджетов по линиям
        self.h_line_p1.addWidget(self.lbl_p2)
        self.h_line_p1.addWidget(self.inp_p2)

        self.h_line_p2.addWidget(self.lbl_p3)
        self.h_line_p2.addWidget(self.inp_p3)        

        self.v_line.addWidget(self.lbl_instr)
        self.v_line.addLayout(self.h_line_p1)
        self.v_line.addLayout(self.h_line_p2)
        self.v_line.addWidget(self.btn, alignment = Qt.AlignCenter)

        self.setLayout(self.v_line)
    
    def connects(self):
        self.btn.clicked.connect(self.next_click)
    
    def next_click(self):
        self.tw = ResScr()
        self.hide()



#5 экран
class ResScr(QWidget):
    def __init__(self):
        super().__init__()

        self.initUi()
        self.set_appear()
        self.show()
    
    def set_appear(self):
        self.setWindowTitle(txt_title)
        self.resize(win_w, win_h)
        self.move(win_x, win_y)





    def initUi(self):
        #создание кнопок
        self.w_text = QLabel(txt_workheart) #+ self.results())
        self.lbl_p2 = QLabel(txt_index) #+ str(self.index)


        self.lay_line = QVBoxLayout()
        self.lay_line.addWidget(self.w_text, alignment = Qt.AlignCenter)
        self.lay_line.addWidget(self.lbl_p2, alignment = Qt.AlignCenter)
        self.setLayout(self.lay_line)

       



    


app = QApplication([])
main_win = InstrScr()
app.exec_()
